<?php

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-08-25 at 15:44:31.
 */
abstract class Avz_DataStore_DbTableTest extends Avz_DataStore_AbstractTest {

    protected $tableName ='data-store-test';       
    protected $tableClass ='Zend_Db_Table';      
    
    /**
     * @var string like Avz_DataStore_DbTableTest or Avz_DataStore_Array 
     */
    protected $testedClass = 'Avz_DataStore_DbTable';  
    
    
    /**
     * For each $options we need same $config
     * 
     * @see createDbTable()
     * @see _initObject()
     * @var array 
     */
    protected $configTable = array(
                                        'id' => 'INT NOT NULL AUTO_INCREMENT PRIMARY KEY',
                                        'anotherId' => 'INT NOT NULL',
                                        'fString' => 'CHAR(20)',
                                        'fInt' => 'INT'        
                                    );   

    /**
     * @var Avz_DataStore_DbTable
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
    }
    
    protected function createDbTable($dbTableName, $dbTableFilds = array())
    {
        global $bootstrap;
        $db = $bootstrap->getResource('db');
        
        $create = "CREATE TABLE IF NOT EXISTS `$dbTableName` ";
        $filds = '';
        foreach ($dbTableFilds as $fildName => $spec) {
            $filds = $filds . "`$fildName` $spec ,";
        }
        $filds = rtrim($filds, ',');
        $statement = $create .  '(' . $filds . ') ENGINE = InnoDB CHARACTER SET utf8 COLLATE utf8_general_ci;';
        
        $db->query($statement); 
        
        $deleteStatement = "DELETE FROM `$dbTableName` WHERE 1>0"; 
        $db->query($deleteStatement); 
        
    }
    
    /**
     * For each $options we need same $config
     * 
     * Table name makes from options name like  'optionsDefault' -->> 'test-table-default'
     * 
     * @see $optionsLabel
     * @see $configLabel
     * @param type $optionsName
     */
    protected function _initObject( $options = array()) {
        $this->createDbTable($this->tableName, $this->configTable);
        
        $dsTable = new $this->tableClass($this->tableName);
        $this->object = new $this->testedClass($options, $dsTable);        
    } 

    
// *************************** Item **************************************************    
    

 
}
